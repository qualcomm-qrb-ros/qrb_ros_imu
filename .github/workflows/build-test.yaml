name: Build test
run-name: Build test by ${{github.event_name}}

on:
  workflow_dispatch:
    inputs:
      machine:
        description: "Specifies the target device for which the image is built."
        required: true
        default: 'qcs6490-rb3gen2-vision-kit'
        type: choice
        options:
          - qcs6490-rb3gen2-vision-kit
          - qcs9100-ride-sx
          - qcm6490-idp
          - qcs6490-rb3gen2-core-kit
          - sa8775p-ride-sx
      distro:
        description: "The short name of the distribution."
        required: true
        default: 'qcom-robotics-ros2-humble'
        type: choice
        options:
          - qcom-robotics-ros2-humble
          - qcom-robotics-ros2-jazzy
          - qcom-wayland
      build_override:
        description: "QCOM build override"
        required: true
        default: 'custom'
        type: choice
        options:
          - custom
          - base
      custom_build_cmd:
          description: "Manually setting build commands"
          required: false
          type: string
          default: ''
      deploy_sdk:
        description: "Deploy generated SDK to persistent directory"
        required: false
        type: boolean
        default: false

env:
  PERSIST_DIR: /srv/gh-runners/quic-qrb-ros
  DL_DIR: /srv/gh-runners/quic-qrb-ros/downloads
  MACHINE: ${{inputs.machine || 'qcs6490-rb3gen2-vision-kit'}}
  DISTRO: ${{inputs.distro || 'qcom-robotics-ros2-humble'}}
  QCOM_SELECTED_BSP: ${{inputs.build_override || 'custom'}}
  DEPLOY_SDK: ${{github.event.inputs.deploy_sdk || 'false'}}

jobs:
  build-pr:
    runs-on: [self-hosted, x86]
    timeout-minutes: 720
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: ${{github.event.repository.name}}

      - name: Check and create work directories
        run: |
          if [ -e ${PERSIST_DIR} ] && [ -r ${PERSIST_DIR} ] && [ -w ${PERSIST_DIR} ];then
            if [ ! -d ${DL_DIR} ];then
              echo "Creating ${DL_DIR}!"
              mkdir -p ${DL_DIR}
            fi

            if [ ! -d ${PERSIST_DIR}/sstate-cache-$DISTRO ];then
              echo "Creating ${PERSIST_DIR}/sstate-cache-$DISTRO !"
              mkdir -p ${PERSIST_DIR}/sstate-cache-$DISTRO
            fi
            echo "ls ${PERSIST_DIR}:"
            ls ${PERSIST_DIR}/ -al
          else
            echo "DEPLOY_SDK=false" >> $GITHUB_ENV
            echo ""persist_dir" is not available. Set DEPLOY_SDK=false."
          fi

      - name: Sync source tree
        run: |
          repo init -u https://github.com/quic-yocto/qcom-manifest -b qcom-linux-kirkstone -m qcom-6.6.38-QLI.1.2-Ver.1.1_robotics-product-sdk-1.1.xml
          repo sync -c -j8
          
      - name: Custom build
        if: ${{github.event.inputs.custom_build_cmd != ''}}
        run: |
          if [ -e ${DL_DIR} ] && [ -r ${DL_DIR} ] && [ -w ${DL_DIR} ];then
            ln -s ${DL_DIR} ./downloads
          fi
          source setup-robotics-environment
          ${{github.event.inputs.custom_build_cmd}}

      - name: Full compilation
        env:
          BB_NUMBER_THREADS: 14

        if: ${{github.event.inputs.custom_build_cmd == ''}}
        run: |
          set -x
          if [ -e ${DL_DIR} ] && [ -r ${DL_DIR} ] && [ -w ${DL_DIR} ];then
            ln -s ${DL_DIR} ./downloads
          fi

          source setup-robotics-environment
          ../qirp-build qcom-robotics-full-image

      - name: Deploy SDK
        if: env.DEPLOY_SDK
        run: |
          export SDK_DIR=${PERSIST_DIR}/sdk-$MACHINE-$DISTRO
          set -x
          set +e
          if [ ! -d ${SDK_DIR} ];then
            echo "Creating ${SDK_DIR}"
            mkdir -p ${SDK_DIR}/
            mkdir -p ${SDK_DIR}/.backup
          fi

          for file in ${SDK_DIR}/*;do
            if [ -f "$file" ]; then
              mv ${file} ${SDK_DIR}/.backup/
            fi
          done

          for file in ${{ github.workspace }}/build-$DISTRO/tmp-glibc/deploy/sdk/*.sh
          do
            cp ${file} ${SDK_DIR}
          done

          if [ $? == 0 ];then
            rm ${SDK_DIR}/.backup/* -fr
          else
            mv ${SDK_DIR}/.backup/* ${SDK_DIR}
          fi